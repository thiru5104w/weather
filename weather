<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Weather App</title>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet">
<script src="https://cdn.tailwindcss.com/3.4.16"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/echarts/5.5.0/echarts.min.js"></script>
<script>tailwind.config={theme:{extend:{colors:{primary:'#3b82f6',secondary:'#64748b'},borderRadius:{'none':'0px','sm':'4px',DEFAULT:'8px','md':'12px','lg':'16px','xl':'20px','2xl':'24px','3xl':'32px','full':'9999px','button':'8px'}}}}</script>
<style>
@keyframes float {
0% { transform: translateY(0px); }
50% { transform: translateY(-10px); }
100% { transform: translateY(0px); }
}
@keyframes moveCloud {
0% { transform: translateX(-100%); }
100% { transform: translateX(100%); }
}
@keyframes moveSun {
0% { transform: translate(-50%, 100%); }
100% { transform: translate(-50%, -100%); }
}
@keyframes fallRain {
0% { transform: translateY(-100%); }
100% { transform: translateY(100%); }
}
.weather-background {
position: absolute;
top: 0;
left: 0;
right: 0;
bottom: 0;
overflow: hidden;
pointer-events: none;
z-index: 0;
}
.sun {
position: absolute;
width: 100px;
height: 100px;
background: radial-gradient(circle, rgba(255,236,173,1) 0%, rgba(255,190,66,0) 70%);
border-radius: 50%;
left: 50%;
top: 0;
transform: translateX(-50%);
animation: moveSun 20s linear infinite;
}
.cloud {
position: absolute;
width: 100px;
height: 40px;
background: rgba(255, 255, 255, 0.8);
border-radius: 20px;
}
.cloud::before,
.cloud::after {
content: '';
position: absolute;
background: rgba(255, 255, 255, 0.8);
border-radius: 50%;
}
.cloud::before {
width: 50px;
height: 50px;
top: -20px;
left: 15px;
}
.cloud::after {
width: 30px;
height: 30px;
top: -10px;
left: 45px;
}
.cloud-1 {
top: 20%;
animation: moveCloud 15s linear infinite;
}
.cloud-2 {
top: 40%;
animation: moveCloud 20s linear infinite;
animation-delay: -5s;
}
.rain {
position: absolute;
width: 2px;
height: 20px;
background: linear-gradient(transparent, rgba(255, 255, 255, 0.5));
animation: fallRain 1s linear infinite;
}
.rain-1 { left: 20%; animation-delay: -0.2s; }
.rain-2 { left: 40%; animation-delay: -0.5s; }
.rain-3 { left: 60%; animation-delay: -0.8s; }
.rain-4 { left: 80%; animation-delay: -0.3s; }
@keyframes bounce-slow {
0%, 100% { transform: translateY(0); }
50% { transform: translateY(-10px); }
}
@keyframes drizzle {
0% { transform: translateY(0) scale(1); }
50% { transform: translateY(-5px) scale(0.95); }
100% { transform: translateY(0) scale(1); }
}
@keyframes rain {
0% { transform: translateY(0) scale(1); }
25% { transform: translateY(-8px) scale(0.95); }
50% { transform: translateY(0) scale(1); }
75% { transform: translateY(-4px) scale(0.98); }
100% { transform: translateY(0) scale(1); }
}
@keyframes storm {
0% { transform: translateX(0) rotate(0); }
25% { transform: translateX(-3px) rotate(-2deg); }
50% { transform: translateX(3px) rotate(2deg); }
75% { transform: translateX(-3px) rotate(-2deg); }
100% { transform: translateX(0) rotate(0); }
}
.animate-bounce-slow {
animation: bounce-slow 3s infinite ease-in-out;
}
.animate-drizzle {
animation: drizzle 3s infinite ease-in-out;
}
.animate-rain {
animation: rain 3s infinite ease-in-out;
}
.animate-storm {
animation: storm 2s infinite ease-in-out;
}
.animate-float {
animation: float 3s infinite ease-in-out;
}
.forecast-card {
transition: all 0.3s ease;
}
.forecast-card:hover {
transform: translateY(-5px) scale(1.02);
box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}
@keyframes pulse {
0% { transform: scale(1); }
50% { transform: scale(1.05); }
100% { transform: scale(1); }
}
@keyframes slideIn {
from {
opacity: 0;
transform: translateY(20px);
}
to {
opacity: 1;
transform: translateY(0);
}
}
@keyframes fadeIn {
from { opacity: 0; }
to { opacity: 1; }
}
@keyframes shimmer {
0% { background-position: -1000px 0; }
100% { background-position: 1000px 0; }
}
:where([class^="ri-"])::before { content: "\f3c2"; }
body {
font-family: 'Inter', sans-serif;
background-color: #f8fafc;
}
.weather-icon {
animation: float 3s ease-in-out infinite;
}
.temperature-display {
animation: pulse 2s ease-in-out infinite;
}
.forecast-card {
animation: fadeIn 0.5s ease-out;
transition: all 0.3s ease;
}
.forecast-card:hover {
transform: translateY(-8px);
box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}
.settings-section {
animation: slideIn 0.5s ease-out;
}
.shimmer-effect {
background: linear-gradient(90deg, #f6f7f8 0%, #edeef1 20%, #f6f7f8 40%, #f6f7f8 100%);
background-size: 2000px 100%;
animation: shimmer 2s linear infinite;
}
.weather-gradient-sunny {
background: linear-gradient(135deg, #FF6B6B 0%, #4ECDC4 100%);
transition: background 0.3s ease;
}
.weather-gradient-cloudy {
background: linear-gradient(135deg, #757F9A 0%, #D7DDE8 100%);
transition: background 0.3s ease;
}
.weather-gradient-rainy {
background: linear-gradient(135deg, #3494E6 0%, #EC6EAD 100%);
transition: background 0.3s ease;
}
.weather-gradient-night {
background: linear-gradient(135deg, #0F2027 0%, #203A43 50%, #2C5364 100%);
transition: background 0.3s ease;
}
.weather-gradient-snow {
background: linear-gradient(135deg, #E3FDF5 0%, #FFE6FA 100%);
transition: background 0.3s ease;
}
.weather-gradient-sunny {
background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
}
.weather-gradient-cloudy {
background: linear-gradient(135deg, #8e9eab 0%, #eef2f3 100%);
}
.weather-gradient-rainy {
background: linear-gradient(135deg, #616161 0%, #9bc5c3 100%);
}
.weather-gradient-night {
background: linear-gradient(135deg, #141e30 0%, #243b55 100%);
}
.weather-gradient-snow {
background: linear-gradient(135deg, #e6dada 0%, #274046 100%);
}
input[type="range"]::-webkit-slider-thumb {
-webkit-appearance: none;
appearance: none;
width: 18px;
height: 18px;
background: #3b82f6;
border-radius: 50%;
cursor: pointer;
}
input[type="checkbox"] {
display: none;
}
.custom-checkbox {
display: inline-block;
width: 20px;
height: 20px;
background-color: white;
border: 2px solid #d1d5db;
border-radius: 4px;
position: relative;
cursor: pointer;
transition: all 0.2s ease;
}
input[type="checkbox"]:checked + .custom-checkbox {
background-color: #3b82f6;
border-color: #3b82f6;
}
input[type="checkbox"]:checked + .custom-checkbox::after {
content: '';
position: absolute;
left: 6px;
top: 2px;
width: 6px;
height: 12px;
border: solid white;
border-width: 0 2px 2px 0;
transform: rotate(45deg);
}
.custom-switch {
position: relative;
display: inline-block;
width: 48px;
height: 24px;
}
.custom-switch input {
opacity: 0;
width: 0;
height: 0;
}
.switch-slider {
position: absolute;
cursor: pointer;
top: 0;
left: 0;
right: 0;
bottom: 0;
background-color: #e5e7eb;
transition: .4s;
border-radius: 24px;
}
.switch-slider:before {
position: absolute;
content: "";
height: 18px;
width: 18px;
left: 3px;
bottom: 3px;
background-color: white;
transition: .4s;
border-radius: 50%;
}
input:checked + .switch-slider {
background-color: #3b82f6;
}
input:checked + .switch-slider:before {
transform: translateX(24px);
}
.forecast-card {
transition: transform 0.3s ease, box-shadow 0.3s ease;
}
.forecast-card:hover {
transform: translateY(-5px);
box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
}
.temperature-dot {
transition: all 0.3s ease;
}
.temperature-line {
transition: all 0.3s ease;
}
</style>
</head>
<body>
<div class="min-h-screen flex flex-col">
<!-- Header -->
<header class="bg-white shadow-sm">
<div class="container mx-auto px-4 py-4 flex items-center justify-between">
<div class="flex items-center">
<h1 class="text-2xl font-['Pacifico'] text-primary">WeatherNow</h1>
</div>
<div class="relative flex-1 max-w-md mx-8">
<div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
<div class="w-5 h-5 flex items-center justify-center text-gray-400">
<i class="ri-search-line"></i>
</div>
</div>
<input type="text" class="w-full pl-10 pr-4 py-2 border-none bg-gray-100 rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-primary" placeholder="Search for a city...">
<button class="absolute inset-y-0 right-0 flex items-center pr-3 text-primary">
<div class="w-5 h-5 flex items-center justify-center">
<i class="ri-map-pin-line"></i>
</div>
</button>
</div>
<div class="flex items-center space-x-4">
<button class="flex items-center space-x-1 text-sm text-gray-600 hover:text-primary transition-colors !rounded-button">
<div class="w-5 h-5 flex items-center justify-center">
<i class="ri-map-pin-user-line"></i>
</div>
<span class="whitespace-nowrap">Current Location</span>
</button>
<div class="text-right">
<p class="text-sm text-gray-600">Thursday, Apr 17</p>
<p class="text-sm font-medium">10:45 AM</p>
</div>
</div>
</div>
</header>
<!-- Main Content -->
<main class="flex-grow">
<!-- Current Weather Section -->
<section class="weather-gradient-sunny text-white py-16 relative overflow-hidden">
<div class="absolute inset-0 bg-gradient-to-r from-blue-500/30 to-transparent"></div>
<div class="weather-background">
<div class="sun"></div>
<div class="cloud cloud-1"></div>
<div class="cloud cloud-2"></div>
<div class="rain rain-1"></div>
<div class="rain rain-2"></div>
<div class="rain rain-3"></div>
<div class="rain rain-4"></div>
</div>
<div class="container mx-auto px-4 relative z-10">
<div class="flex flex-col md:flex-row items-center justify-between">
<div class="mb-8 md:mb-0 text-center md:text-left">
<h2 class="text-2xl font-medium mb-2">San Francisco, California</h2>
<div class="flex items-center justify-center md:justify-start space-x-2 mb-6">
<div class="w-5 h-5 flex items-center justify-center">
<i class="ri-time-line"></i>
</div>
<p class="text-sm">Last updated: 10:45 AM</p>
</div>
<div class="flex flex-col md:flex-row items-center md:space-x-8">
<div class="text-8xl font-light mb-4 md:mb-0 temperature-display">72°</div>
<div>
<p class="text-2xl font-medium mb-2">Sunny</p>
<div class="flex items-center space-x-6">
<div class="flex items-center">
<div class="w-5 h-5 flex items-center justify-center mr-1">
<i class="ri-arrow-up-line"></i>
</div>
<span>78°</span>
</div>
<div class="flex items-center">
<div class="w-5 h-5 flex items-center justify-center mr-1">
<i class="ri-arrow-down-line"></i>
</div>
<span>65°</span>
</div>
</div>
</div>
</div>
</div>
<div class="flex flex-col items-center">
<div class="w-32 h-32 flex items-center justify-center text-8xl mb-4 weather-icon">
<i class="ri-sun-line"></i>
</div>
<div class="grid grid-cols-2 gap-x-8 gap-y-4 text-center">
<div>
<p class="text-sm opacity-80">Humidity</p>
<p class="text-xl font-medium">45%</p>
</div>
<div>
<p class="text-sm opacity-80">Wind</p>
<p class="text-xl font-medium">8 mph</p>
</div>
<div>
<p class="text-sm opacity-80">Feels Like</p>
<p class="text-xl font-medium">75°</p>
</div>
<div>
<p class="text-sm opacity-80">Precipitation</p>
<p class="text-xl font-medium">0%</p>
</div>
</div>
</div>
</div>
</div>
</section>
<!-- Temperature Chart -->
<section class="py-10 bg-white">
<div class="container mx-auto px-4">
<div class="flex items-center justify-between mb-6">
<h2 class="text-xl font-semibold text-gray-800">Hourly Forecast</h2>
<div class="flex items-center space-x-4">
<label class="custom-switch">
<input type="checkbox" id="tempUnitToggle">
<span class="switch-slider"></span>
</label>
<span class="text-sm font-medium">°F / °C</span>
</div>
</div>
<div class="bg-white rounded-lg shadow-sm p-4 h-64" id="hourlyChart"></div>
</div>
</section>
<!-- 7-Day Forecast -->
<section class="py-10 bg-gray-50">
<div class="container mx-auto px-4">
<h2 class="text-xl font-semibold text-gray-800 mb-6">7-Day Forecast</h2>
<div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 lg:grid-cols-7 gap-4">
<div class="forecast-card bg-gradient-to-b from-blue-50 to-white rounded-xl shadow-lg p-6 flex flex-col items-center transform hover:scale-105 transition-all duration-300">
<p class="font-medium text-gray-800 mb-2">Today</p>
<div class="weather-icon-container w-24 h-24 relative mb-3">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20sun%20character%20with%20happy%20smiling%20face%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=200&height=200&seq=1&orientation=squarish" class="w-full h-full object-contain animate-bounce-slow" alt="Sunny">
</div>
<p class="text-sm font-medium text-primary mb-3">Sunny</p>
<div class="flex items-center space-x-3">
<span class="text-lg font-semibold text-gray-800">78°</span>
<div class="h-4 w-px bg-gray-300"></div>
<span class="text-gray-500">65°</span>
</div>
</div>
<div class="forecast-card bg-gradient-to-b from-blue-50 to-white rounded-xl shadow-lg p-6 flex flex-col items-center transform hover:scale-105 transition-all duration-300">
<p class="font-medium text-gray-800 mb-2">Fri</p>
<div class="weather-icon-container w-24 h-24 relative mb-3">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20sun%20behind%20cloud%20character%20with%20happy%20face%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=200&height=200&seq=2&orientation=squarish" class="w-full h-full object-contain animate-float" alt="Partly Cloudy">
</div>
<p class="text-sm font-medium text-primary mb-3">Partly Cloudy</p>
<div class="flex items-center space-x-3">
<span class="text-lg font-semibold text-gray-800">76°</span>
<div class="h-4 w-px bg-gray-300"></div>
<span class="text-gray-500">64°</span>
</div>
</div>
<div class="forecast-card bg-gradient-to-b from-blue-50 to-white rounded-xl shadow-lg p-6 flex flex-col items-center transform hover:scale-105 transition-all duration-300">
<p class="font-medium text-gray-800 mb-2">Sat</p>
<div class="weather-icon-container w-24 h-24 relative mb-3">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20cloud%20character%20with%20sleepy%20face%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=200&height=200&seq=3&orientation=squarish" class="w-full h-full object-contain animate-pulse" alt="Cloudy">
</div>
<p class="text-sm font-medium text-primary mb-3">Cloudy</p>
<div class="flex items-center space-x-3">
<span class="text-lg font-semibold text-gray-800">72°</span>
<div class="h-4 w-px bg-gray-300"></div>
<span class="text-gray-500">63°</span>
</div>
</div>
<div class="forecast-card bg-gradient-to-b from-blue-50 to-white rounded-xl shadow-lg p-6 flex flex-col items-center transform hover:scale-105 transition-all duration-300">
<p class="font-medium text-gray-800 mb-2">Sun</p>
<div class="weather-icon-container w-24 h-24 relative mb-3">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20cloud%20character%20with%20light%20rain%20drops%20and%20umbrella%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=200&height=200&seq=4&orientation=squarish" class="w-full h-full object-contain animate-drizzle" alt="Showers">
</div>
<p class="text-sm font-medium text-primary mb-3">Showers</p>
<div class="flex items-center space-x-3">
<span class="text-lg font-semibold text-gray-800">68°</span>
<div class="h-4 w-px bg-gray-300"></div>
<span class="text-gray-500">60°</span>
</div>
</div>
<div class="forecast-card bg-gradient-to-b from-blue-50 to-white rounded-xl shadow-lg p-6 flex flex-col items-center transform hover:scale-105 transition-all duration-300">
<p class="font-medium text-gray-800 mb-2">Mon</p>
<div class="weather-icon-container w-24 h-24 relative mb-3">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20cloud%20character%20with%20heavy%20rain%20drops%20and%20sad%20face%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=200&height=200&seq=5&orientation=squarish" class="w-full h-full object-contain animate-rain" alt="Rain">
</div>
<p class="text-sm font-medium text-primary mb-3">Rain</p>
<div class="flex items-center space-x-3">
<span class="text-lg font-semibold text-gray-800">65°</span>
<div class="h-4 w-px bg-gray-300"></div>
<span class="text-gray-500">58°</span>
</div>
</div>
<div class="forecast-card bg-gradient-to-b from-blue-50 to-white rounded-xl shadow-lg p-6 flex flex-col items-center transform hover:scale-105 transition-all duration-300">
<p class="font-medium text-gray-800 mb-2">Tue</p>
<div class="weather-icon-container w-24 h-24 relative mb-3">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20cloud%20character%20with%20heavy%20rain%20drops%20and%20thunder%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=200&height=200&seq=6&orientation=squarish" class="w-full h-full object-contain animate-storm" alt="Rain">
</div>
<p class="text-sm font-medium text-primary mb-3">Rain</p>
<div class="flex items-center space-x-3">
<span class="text-lg font-semibold text-gray-800">67°</span>
<div class="h-4 w-px bg-gray-300"></div>
<span class="text-gray-500">59°</span>
</div>
</div>
<div class="forecast-card bg-gradient-to-b from-blue-50 to-white rounded-xl shadow-lg p-6 flex flex-col items-center transform hover:scale-105 transition-all duration-300">
<p class="font-medium text-gray-800 mb-2">Wed</p>
<div class="weather-icon-container w-24 h-24 relative mb-3">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20sun%20peeking%20from%20behind%20cloud%20character%20with%20happy%20face%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=200&height=200&seq=7&orientation=squarish" class="w-full h-full object-contain animate-float" alt="Partly Cloudy">
</div>
<p class="text-sm font-medium text-primary mb-3">Partly Cloudy</p>
<div class="flex items-center space-x-3">
<span class="text-lg font-semibold text-gray-800">70°</span>
<div class="h-4 w-px bg-gray-300"></div>
<span class="text-gray-500">61°</span>
</div>
</div>
</div>
</div>
</section>
<!-- Weather Details -->
<section class="py-10 bg-white">
<div class="container mx-auto px-4">
<h2 class="text-xl font-semibold text-gray-800 mb-6">Weather Details</h2>
<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
<div class="bg-gradient-to-br from-blue-50 to-white rounded-lg p-6 shadow-lg hover:shadow-xl transition-all duration-300">
<div class="grid grid-cols-2 gap-6">
<div class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-300">
<p class="text-sm text-gray-500 mb-3">Sunrise</p>
<div class="flex items-center justify-between">
<div class="flex items-center">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20sun%20rising%20over%20horizon%20with%20happy%20face%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=100&height=100&seq=8&orientation=squarish" class="w-12 h-12 object-contain animate-bounce-slow mr-3" alt="Sunrise">
<p class="font-medium">6:23 AM</p>
</div>
</div>
</div>
<div class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-300">
<p class="text-sm text-gray-500 mb-3">Sunset</p>
<div class="flex items-center justify-between">
<div class="flex items-center">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20sun%20setting%20behind%20horizon%20with%20sleepy%20face%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=100&height=100&seq=9&orientation=squarish" class="w-12 h-12 object-contain animate-float mr-3" alt="Sunset">
<p class="font-medium">7:48 PM</p>
</div>
</div>
</div>
<div class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-300">
<p class="text-sm text-gray-500 mb-3">Humidity</p>
<div class="flex items-center justify-between">
<div class="flex items-center">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20water%20droplet%20character%20with%20happy%20face%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=100&height=100&seq=10&orientation=squarish" class="w-12 h-12 object-contain animate-drizzle mr-3" alt="Humidity">
<p class="font-medium">45%</p>
</div>
</div>
</div>
<div class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-300">
<p class="text-sm text-gray-500 mb-3">Pressure</p>
<div class="flex items-center justify-between">
<div class="flex items-center">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20gauge%20meter%20character%20with%20determined%20face%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=100&height=100&seq=11&orientation=squarish" class="w-12 h-12 object-contain animate-pulse mr-3" alt="Pressure">
<p class="font-medium">1012 hPa</p>
</div>
</div>
</div>
</div>
</div>
<div class="bg-gradient-to-br from-blue-50 to-white rounded-lg p-6 shadow-lg hover:shadow-xl transition-all duration-300">
<div class="grid grid-cols-2 gap-6">
<div class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-300">
<p class="text-sm text-gray-500 mb-3">Wind</p>
<div class="flex items-center justify-between">
<div class="flex items-center">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20wind%20character%20blowing%20with%20puffy%20cheeks%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=100&height=100&seq=12&orientation=squarish" class="w-12 h-12 object-contain animate-float mr-3" alt="Wind">
<p class="font-medium">8 mph</p>
</div>
</div>
</div>
<div class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-300">
<p class="text-sm text-gray-500 mb-3">UV Index</p>
<div class="flex items-center justify-between">
<div class="flex items-center">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20sun%20wearing%20sunglasses%20with%20cool%20expression%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=100&height=100&seq=13&orientation=squarish" class="w-12 h-12 object-contain animate-pulse mr-3" alt="UV Index">
<p class="font-medium">6 (High)</p>
</div>
</div>
</div>
<div class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-300">
<p class="text-sm text-gray-500 mb-3">Visibility</p>
<div class="flex items-center justify-between">
<div class="flex items-center">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20eye%20character%20with%20magnifying%20glass%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=100&height=100&seq=14&orientation=squarish" class="w-12 h-12 object-contain animate-bounce-slow mr-3" alt="Visibility">
<p class="font-medium">10 mi</p>
</div>
</div>
</div>
<div class="p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-300">
<p class="text-sm text-gray-500 mb-3">Feels Like</p>
<div class="flex items-center justify-between">
<div class="flex items-center">
<img src="https://readdy.ai/api/search-image?query=cute%20cartoon%20thermometer%20character%20with%20cozy%20expression%2C%20simple%20background%2C%20kawaii%20style%2C%20vector%20art%20illustration&width=100&height=100&seq=15&orientation=squarish" class="w-12 h-12 object-contain animate-float mr-3" alt="Feels Like">
<p class="font-medium">75°</p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<!-- Settings Section -->
<section class="py-10 bg-gray-50 settings-section">
<div class="container mx-auto px-4">
<h2 class="text-xl font-semibold text-gray-800 mb-6">Settings</h2>
<div class="bg-white rounded-lg shadow-sm p-6">
<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
<div>
<h3 class="text-lg font-medium text-gray-800 mb-4">Units</h3>
<div class="space-y-4">
<div class="flex items-center justify-between">
<span class="text-gray-700">Temperature</span>
<div class="flex items-center space-x-4">
<label class="inline-flex items-center">
<input type="radio" name="temperature" class="hidden" checked>
<span class="w-4 h-4 rounded-full border border-gray-300 flex items-center justify-center mr-2 relative">
<span class="w-2 h-2 rounded-full bg-primary absolute"></span>
</span>
<span>°F</span>
</label>
<label class="inline-flex items-center">
<input type="radio" name="temperature" class="hidden">
<span class="w-4 h-4 rounded-full border border-gray-300 flex items-center justify-center mr-2 relative">
<span class="w-2 h-2 rounded-full bg-transparent absolute"></span>
</span>
<span>°C</span>
</label>
</div>
</div>
<div class="flex items-center justify-between">
<span class="text-gray-700">Wind Speed</span>
<div class="flex items-center space-x-4">
<label class="inline-flex items-center">
<input type="radio" name="wind" class="hidden" checked>
<span class="w-4 h-4 rounded-full border border-gray-300 flex items-center justify-center mr-2 relative">
<span class="w-2 h-2 rounded-full bg-primary absolute"></span>
</span>
<span>mph</span>
</label>
<label class="inline-flex items-center">
<input type="radio" name="wind" class="hidden">
<span class="w-4 h-4 rounded-full border border-gray-300 flex items-center justify-center mr-2 relative">
<span class="w-2 h-2 rounded-full bg-transparent absolute"></span>
</span>
<span>km/h</span>
</label>
</div>
</div>
<div class="flex items-center justify-between">
<span class="text-gray-700">Pressure</span>
<div class="flex items-center space-x-4">
<label class="inline-flex items-center">
<input type="radio" name="pressure" class="hidden" checked>
<span class="w-4 h-4 rounded-full border border-gray-300 flex items-center justify-center mr-2 relative">
<span class="w-2 h-2 rounded-full bg-primary absolute"></span>
</span>
<span>hPa</span>
</label>
<label class="inline-flex items-center">
<input type="radio" name="pressure" class="hidden">
<span class="w-4 h-4 rounded-full border border-gray-300 flex items-center justify-center mr-2 relative">
<span class="w-2 h-2 rounded-full bg-transparent absolute"></span>
</span>
<span>inHg</span>
</label>
</div>
</div>
</div>
</div>
<div>
<h3 class="text-lg font-medium text-gray-800 mb-4">Display</h3>
<div class="space-y-4">
<div class="flex items-center justify-between">
<span class="text-gray-700">Dark Mode</span>
<label class="custom-switch">
<input type="checkbox">
<span class="switch-slider"></span>
</label>
</div>
<div class="flex items-center justify-between">
<span class="text-gray-700">Notifications</span>
<label class="custom-switch">
<input type="checkbox" checked>
<span class="switch-slider"></span>
</label>
</div>
<div>
<label class="block text-gray-700 mb-2">Refresh Rate</label>
<input type="range" min="1" max="60" value="30" class="w-full h-2 bg-gray-200 rounded-full appearance-none cursor-pointer">
<div class="flex justify-between text-xs text-gray-500 mt-1">
<span>1 min</span>
<span>30 min</span>
<span>60 min</span>
</div>
</div>
</div>
</div>
</div>
<div class="mt-6 pt-6 border-t border-gray-200 flex justify-end">
<button class="bg-primary text-white px-4 py-2 rounded-button whitespace-nowrap hover:bg-primary/90 transition-colors">Save Settings</button>
</div>
</div>
</div>
</section>
</main>
<!-- Footer -->
<footer class="bg-gray-800 text-white py-8">
<div class="container mx-auto px-4">
<div class="grid grid-cols-1 md:grid-cols-3 gap-8">
<div>
<h3 class="text-lg font-medium mb-4">WeatherNow</h3>
<p class="text-gray-400 text-sm">Providing accurate weather forecasts and real-time updates to help you plan your day with confidence.</p>
</div>
<div>
<h3 class="text-lg font-medium mb-4">Quick Links</h3>
<ul class="space-y-2 text-sm text-gray-400">
<li><a href="#" class="hover:text-white transition-colors">Home</a></li>
<li><a href="#" class="hover:text-white transition-colors">Radar Map</a></li>
<li><a href="#" class="hover:text-white transition-colors">Severe Weather Alerts</a></li>
<li><a href="#" class="hover:text-white transition-colors">Weather News</a></li>
</ul>
</div>
<div>
<h3 class="text-lg font-medium mb-4">Connect With Us</h3>
<div class="flex space-x-4 mb-4">
<a href="#" class="w-8 h-8 flex items-center justify-center bg-gray-700 rounded-full hover:bg-primary transition-colors">
<i class="ri-twitter-x-line"></i>
</a>
<a href="#" class="w-8 h-8 flex items-center justify-center bg-gray-700 rounded-full hover:bg-primary transition-colors">
<i class="ri-facebook-fill"></i>
</a>
<a href="#" class="w-8 h-8 flex items-center justify-center bg-gray-700 rounded-full hover:bg-primary transition-colors">
<i class="ri-instagram-line"></i>
</a>
<a href="#" class="w-8 h-8 flex items-center justify-center bg-gray-700 rounded-full hover:bg-primary transition-colors">
<i class="ri-youtube-line"></i>
</a>
</div>
<p class="text-sm text-gray-400">Download our mobile app:</p>
<div class="flex space-x-3 mt-2">
<a href="#" class="flex items-center space-x-1 text-sm hover:text-white transition-colors">
<div class="w-5 h-5 flex items-center justify-center">
<i class="ri-apple-fill"></i>
</div>
<span>iOS</span>
</a>
<a href="#" class="flex items-center space-x-1 text-sm hover:text-white transition-colors">
<div class="w-5 h-5 flex items-center justify-center">
<i class="ri-android-fill"></i>
</div>
<span>Android</span>
</a>
</div>
</div>
</div>
<div class="border-t border-gray-700 mt-8 pt-6 flex flex-col md:flex-row justify-between items-center">
<p class="text-sm text-gray-400 mb-4 md:mb-0">© 2025 WeatherNow. All rights reserved.</p>
<div class="flex space-x-4 text-sm text-gray-400">
<a href="#" class="hover:text-white transition-colors">Privacy Policy</a>
<a href="#" class="hover:text-white transition-colors">Terms of Service</a>
<a href="#" class="hover:text-white transition-colors">Contact Us</a>
</div>
</div>
</div>
</footer>
</div>
<script>
document.addEventListener('DOMContentLoaded', function() {
// Load saved preferences
const savedPreferences = JSON.parse(localStorage.getItem('weatherAppPreferences')) || {
darkMode: false,
notifications: false,
temperatureUnit: 'F'
};
// Initialize switches based on saved preferences
const darkModeSwitch = document.querySelector('input[type="checkbox"]');
const notificationsSwitch = document.querySelectorAll('input[type="checkbox"]')[1];
const temperatureUnitSwitch = document.getElementById('tempUnitToggle');
darkModeSwitch.checked = savedPreferences.darkMode;
notificationsSwitch.checked = savedPreferences.notifications;
temperatureUnitSwitch.checked = savedPreferences.temperatureUnit === 'C';
// Apply initial theme
if (savedPreferences.darkMode) {
document.documentElement.setAttribute('data-theme', 'dark');
}
// Dark Mode Toggle
darkModeSwitch.addEventListener('change', function() {
if (this.checked) {
document.documentElement.setAttribute('data-theme', 'dark');
} else {
document.documentElement.setAttribute('data-theme', 'light');
}
savedPreferences.darkMode = this.checked;
localStorage.setItem('weatherAppPreferences', JSON.stringify(savedPreferences));
});
// Notifications Toggle
notificationsSwitch.addEventListener('change', function() {
if (this.checked) {
Notification.requestPermission().then(function(permission) {
if (permission !== 'granted') {
notificationsSwitch.checked = false;
}
});
}
savedPreferences.notifications = this.checked;
localStorage.setItem('weatherAppPreferences', JSON.stringify(savedPreferences));
});
// Temperature Unit Toggle Helper Function
function convertTemperature(value, toUnit) {
if (toUnit === 'C') {
return Math.round((value - 32) * 5 / 9);
} else {
return Math.round((value * 9 / 5) + 32);
}
}
// Temperature Unit Toggle
temperatureUnitSwitch.addEventListener('change', function() {
const unit = this.checked ? 'C' : 'F';
savedPreferences.temperatureUnit = unit;
localStorage.setItem('weatherAppPreferences', JSON.stringify(savedPreferences));
// Update all temperature displays
document.querySelectorAll('.temperature-display, [data-temperature]').forEach(el => {
const temp = parseInt(el.textContent);
if (!isNaN(temp)) {
const newTemp = convertTemperature(temp, unit);
el.textContent = `${newTemp}°`;
}
});
// Update chart temperatures
if (hourlyChart) {
const newData = hourlyOption.series[0].data.map(temp => convertTemperature(temp, unit));
hourlyOption.series[0].data = newData;
hourlyOption.yAxis.min = unit === 'C' ? 15 : 60;
hourlyOption.yAxis.max = unit === 'C' ? 30 : 80;
hourlyChart.setOption(hourlyOption);
}
});
// Weather background animation control
const weatherSection = document.querySelector('.weather-gradient-sunny');
const weatherBackground = weatherSection.querySelector('.weather-background');
function updateWeatherAnimation(weatherType) {
const sun = weatherBackground.querySelector('.sun');
const clouds = weatherBackground.querySelectorAll('.cloud');
const rains = weatherBackground.querySelectorAll('.rain');
switch(weatherType) {
case 'sunny':
sun.style.display = 'block';
clouds.forEach(cloud => cloud.style.display = 'none');
rains.forEach(rain => rain.style.display = 'none');
weatherSection.className = 'weather-gradient-sunny text-white py-16 relative overflow-hidden';
break;
case 'cloudy':
sun.style.display = 'none';
clouds.forEach(cloud => cloud.style.display = 'block');
rains.forEach(rain => rain.style.display = 'none');
weatherSection.className = 'weather-gradient-cloudy text-white py-16 relative overflow-hidden';
break;
case 'rainy':
sun.style.display = 'none';
clouds.forEach(cloud => cloud.style.display = 'block');
rains.forEach(rain => rain.style.display = 'block');
weatherSection.className = 'weather-gradient-rainy text-white py-16 relative overflow-hidden';
break;
}
}
// Demo: Change weather every 5 seconds
const weatherTypes = ['sunny', 'cloudy', 'rainy'];
let currentWeatherIndex = 0;
setInterval(() => {
currentWeatherIndex = (currentWeatherIndex + 1) % weatherTypes.length;
updateWeatherAnimation(weatherTypes[currentWeatherIndex]);
}, 5000);
// Initialize the hourly chart
const hourlyChart = echarts.init(document.getElementById('hourlyChart'));
const hourlyOption = {
animation: {
duration: 1000,
easing: 'cubicOut'
},
tooltip: {
trigger: 'axis',
backgroundColor: 'rgba(255, 255, 255, 0.95)',
borderColor: '#e5e7eb',
textStyle: {
color: '#1f2937'
},
extraCssText: 'box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15); border-radius: 8px;',
formatter: function(params) {
let result = `<div class="font-medium">${params[0].axisValue}</div>`;
params.forEach(param => {
result += `<div class="flex items-center mt-2">
<span style="color: ${param.color}">●</span>
<span class="ml-2">${param.seriesName}: ${param.value}${param.seriesName === 'Temperature' ? '°' : '%'}</span>
</div>`;
});
return result;
}
},
grid: {
left: '3%',
right: '4%',
bottom: '3%',
top: '3%',
containLabel: true
},
xAxis: {
type: 'category',
boundaryGap: false,
data: ['11AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM'],
axisLine: {
lineStyle: {
color: '#e5e7eb'
}
},
axisTick: {
show: false
},
axisLabel: {
color: '#6b7280'
}
},
yAxis: {
type: 'value',
min: 60,
max: 80,
axisLine: {
show: false
},
axisTick: {
show: false
},
splitLine: {
lineStyle: {
color: '#f3f4f6'
}
},
axisLabel: {
color: '#6b7280'
}
},
series: [
{
name: 'Temperature',
type: 'line',
smooth: true,
symbol: 'circle',
symbolSize: 8,
itemStyle: {
color: 'rgba(87, 181, 231, 1)'
},
lineStyle: {
width: 3,
color: 'rgba(87, 181, 231, 1)'
},
areaStyle: {
color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
{
offset: 0,
color: 'rgba(87, 181, 231, 0.3)'
},
{
offset: 1,
color: 'rgba(87, 181, 231, 0.05)'
}
])
},
data: [72, 74, 76, 77, 78, 77, 75, 73, 70, 68, 66, 65]
},
{
name: 'Precipitation',
type: 'bar',
barWidth: '60%',
itemStyle: {
color: 'rgba(141, 211, 199, 0.5)',
borderRadius: [4, 4, 0, 0]
},
data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 10, 15]
}
]
};
hourlyChart.setOption(hourlyOption);
// Handle window resize
window.addEventListener('resize', function() {
hourlyChart.resize();
});
// Temperature unit toggle
const tempUnitToggle = document.getElementById('tempUnitToggle');
tempUnitToggle.addEventListener('change', function() {
// This would convert temperatures in a real app
// For demo purposes, we'll just update the chart
if (this.checked) {
// Convert to Celsius
hourlyOption.series[0].data = hourlyOption.series[0].data.map(temp => Math.round((temp - 32) * 5 / 9));
hourlyOption.yAxis.min = 15;
hourlyOption.yAxis.max = 30;
} else {
// Convert to Fahrenheit
hourlyOption.series[0].data = [72, 74, 76, 77, 78, 77, 75, 73, 70, 68, 66, 65];
hourlyOption.yAxis.min = 60;
hourlyOption.yAxis.max = 80;
}
hourlyChart.setOption(hourlyOption);
});
// Radio buttons
const radioButtons = document.querySelectorAll('input[type="radio"]');
radioButtons.forEach(radio => {
radio.addEventListener('change', function() {
if (this.checked) {
// Find all radio buttons with the same name
const name = this.getAttribute('name');
const radios = document.querySelectorAll(`input[name="${name}"]`);
// Update the visual state of all radio buttons in the group
radios.forEach(r => {
const indicator = r.nextElementSibling.querySelector('span');
if (r === this) {
indicator.classList.remove('bg-transparent');
indicator.classList.add('bg-primary');
} else {
indicator.classList.remove('bg-primary');
indicator.classList.add('bg-transparent');
}
});
}
});
});
});
</script>
</body>
</html>
